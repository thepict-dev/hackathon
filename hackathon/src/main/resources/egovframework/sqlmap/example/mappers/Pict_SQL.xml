<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pict_admin.service.impl.PictMapper">
	
	<select id="board_list" resultType="pictVO">
		select * from board_table
		where 1=1
		<if test="search_text != null and search_text != '' ">
			and (
				title LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>
		
		<if test="category != null and category != '' ">
			and category = #{category}
		</if>
		order by reg_date desc
	</select>
	
	<select id="board_list_one" resultType="pictVO">
		select * from board_table
		where idx = #{idx}
	</select>
	
	<insert id="board_insert" parameterType="pictVO">
		INSERT INTO board_table
			(
			 title, text, reg_date, file_1, file_2, file_3, file_4, file_5, category
			)
		VALUES (
			 #{title}, #{text}, now(), #{file_1}, #{file_2}, #{file_3}, #{file_4}, #{file_5}, #{category}
			  ) 
	</insert>
	
	<update id="board_update" parameterType="pictVO">
		update board_table
		set title =#{title}, text=#{text}, reg_date = now(), category = #{category}
		<if test="file_1 != null and file_1 != ''">
			, file_1 = #{file_1}
		</if>
		<if test="file_2 != null and file_2 != ''">
			, file_2 = #{file_2}
		</if>
		<if test="file_3 != null and file_3 != ''">
			, file_3 = #{file_3}
		</if>
		<if test="file_4 != null and file_4 != ''">
			, file_4 = #{file_4}
		</if>
		<if test="file_5 != null and file_5 != ''">
			, file_5 = #{file_5}
		</if>
		where idx = #{idx}
	</update>
	
	
	<delete id="board_delete" parameterType="pictVO">
		delete from board_table where idx = #{idx}
	</delete>
	
	<update id="board_att_del" parameterType="pictVO">
		update board_table set reg_date =now()
		<if test="del_idx != null and del_idx != '' and del_idx == 1">
			, file_1 = ''
		</if>
		<if test="del_idx != null and del_idx != '' and del_idx == 2">
			, file_2 = ''
		</if>
		<if test="del_idx != null and del_idx != '' and del_idx == 3">
			, file_3 = ''
		</if>
		<if test="del_idx != null and del_idx != '' and del_idx == 4">
			, file_4 = ''
		</if>
		<if test="del_idx != null and del_idx != '' and del_idx == 5">
			, file_5 = ''
		</if>
		
		where idx = #{idx}
	</update>
	
	
	<select id="vote_list" resultType="testVO">
		select t.title, count(v.idx) as cnt
		from vote_table v
		left outer join team_table t on v.target_id = t.idx
		group by v.target_id
		order by cnt desc
		limit 10 offset 0
	</select>
	
	<insert id="vote_insert" parameterType="pictVO">
		INSERT INTO vote_table
			(
			 target_id, reg_date
			)
		VALUES (
			 #{target_id}, now()
			  ) 
	</insert>
	
	
	<!-- 참가팀 -->
	<select id="team_list" resultType="pictVO">
		select * from team_table
		where 1=1
		<if test="search_text != null and search_text != '' ">
			and (
				title LIKE CONCAT('%', #{search_text}, '%') or assignment_name LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>

		order by reg_date desc
		LIMIT #{limit} OFFSET #{startNumber}
	</select>
	
	<select id="team_list_cnt" resultType="int">
		select count(title) from team_table
		where 1=1
		<if test="search_text != null and search_text != '' ">
			and (
				title LIKE CONCAT('%', #{search_text}, '%') or assignment_name LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>

		order by reg_date desc
	</select>
	
	
	<select id="team_list_one" resultType="pictVO">
		select * from team_table
		where idx = #{idx}
	</select>
	
	<insert id="team_insert" parameterType="pictVO" useGeneratedKeys="true" keyProperty="idx">
		INSERT INTO team_table
			(
			 assignment_id, local, reg_date, title, team_cnt, assignment_name, keyword, file_url, award
			)
		VALUES (
			 #{assignment_id}, #{local}, now(), #{title}, #{team_cnt}, #{assignment_name}, #{keyword}, #{file_url}, #{award}
			  ) 
	</insert>
	
	<update id="team_update" parameterType="pictVO">
		update team_table
		set title =#{title}, assignment_id=#{assignment_id}, reg_date = now(), local = #{local}
		, team_cnt = #{team_cnt}, assignment_name = #{assignment_name}, keyword = #{keyword}, award = #{award}
		
		<if test="file_url != null and file_url != ''">
			, file_url = #{file_url}
		</if>
		
		where idx = #{idx}
	</update>
	
	<delete id="team_delete" parameterType="pictVO">
		delete from team_table where idx = #{idx}
	</delete>
	
	
	<!-- 참가자 -->
	<select id="user_list" resultType="pictVO">
		select t.title, t.assignment_name, u.*
		from user_table u
		left outer join team_table t on u.team_id = t.idx
		where 1=1 and judge != "Y"
		<if test="search_text != null and search_text != '' ">
			and (
				name LIKE CONCAT('%', #{search_text}, '%') or mobile LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>

		order by reg_date desc
		LIMIT #{limit} OFFSET #{startNumber}
	</select>
	
	<select id="user_list_one" resultType="pictVO">
		select * from user_table
		where idx = #{idx}
		
	</select>
	
	<select id="user_list_cnt" resultType="int">
		select count(u.idx)
		from user_table u
		left outer join team_table t on u.team_id = t.idx
		where 1=1 and judge != "Y"
		<if test="search_text != null and search_text != '' ">
			and (
				name LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>

	</select>
	
	<insert id="user_insert" parameterType="pictVO">
		INSERT INTO user_table
			(
			 team_id, name, birthday, mobile, email, company, depart, shirt, parent_name, parent_birthday, parent_mobile, parent_relation, parent_address, parent_address2, judge, reg_date, sex
			)
		VALUES (
			 #{team_id}, #{name}, #{birthday}, #{mobile}, #{email}, #{company}, #{depart}, #{shirt}, #{parent_name}, #{parent_birthday}, #{parent_mobile}, #{parent_relation}, #{parent_address}, #{parent_address2}, #{judge}, now(), #{sex}
			  ) 
	</insert>
	
	<!-- ,  -->
	<update id="user_update" parameterType="pictVO">
		update user_table
		set name=#{name}, birthday = #{birthday}, mobile = #{mobile}, sex= #{sex}, email = #{email}, company = #{company}, depart = #{depart}, shirt = #{shirt}, reg_date = now()
		, parent_name = #{parent_name}, parent_birthday = #{parent_birthday}, parent_mobile = #{parent_mobile}, parent_relation = #{parent_relation}
		, parent_address = #{parent_address}, parent_address2 = #{parent_address2}, judge = "N"
		where idx = #{idx}
	</update>
	
	<delete id="user_delete" parameterType="pictVO">
		delete from user_table where idx = #{idx}
	</delete>
	
	
	<!-- 파일함 -->
	<select id="file_list" resultType="pictVO">
		select t.title as team_title, t.assignment_id, u.name, d.*
		from drive_table d
		left outer join team_table t on d.team_id = t.idx
		left outer join user_table u on d.user_id = u.idx
		where 1=1
		<if test="assignment_id != null and assignment_id != '' ">
			and t.assignment_id = #{assignment_id}
		</if>
		<if test="team_id != null and team_id != '' ">
			and t.idx = #{team_id}
		</if>

		order by reg_date desc
	</select>
	
	<!-- 파일함 중에 발표자료인거 -->
	<select id="final_list" resultType="pictVO">
		SELECT t.title, t.assignment_id, u.name, d.*
		FROM team_table t
		LEFT OUTER JOIN (
		    SELECT d1.*
		    FROM drive_table d1
		    JOIN (
		        SELECT team_id, MAX(reg_date) AS max_reg_date
		        FROM drive_table
		        WHERE type = 2
		        GROUP BY team_id
		    ) d2 ON d1.team_id = d2.team_id AND d1.reg_date = d2.max_reg_date
		    WHERE d1.type = 2
		) d ON t.idx = d.team_id
		LEFT OUTER JOIN user_table u ON d.user_id = u.idx
		WHERE t.idx IS NOT NULL
		<if test="assignment_id != null and assignment_id != '' ">
			and t.assignment_id = #{assignment_id}
		</if>
	</select>
	
	
	<delete id="file_delete" parameterType="pictVO">
		delete from drive_table where idx = #{idx}
		<if test="mainy != null and mainy != '' ">
			and team_id = #{team_id}
		</if>
	</delete>
	
	<!-- 청중투표 -->
	<select id="vote_user_list" resultType="pictVO">
		select (select count(idx) from vote_table v where t.idx = v.target_id) as cnt, t.*
		from team_table t
		order by cnt desc
	</select>

	<!-- 심사평가 -->	
	<select id="judge_list" resultType="pictVO">
		select t.idx, t.title, t.assignment_id, t.assignment_name, local, award, 
		sum(ifnull((point_1 + point_2 + point_3  + point_4), 0)) as point,
		max(ifnull((point_1 + point_2 + point_3  + point_4), 0)) as max_point,
		min(ifnull((point_1 + point_2 + point_3  + point_4), 0)) as min_point,
		count(point_1) as point_cnt
		from team_table t
		left outer join judge_table j on j.team_id = t.idx
		where 1=1
		<if test="assignment_id != null and assignment_id != '' ">
			and t.assignment_id = #{assignment_id}
		</if>
		
		group by t.idx
		order by t.idx asc
	</select>
	
	
	
	<select id="password_compare" resultType="pictVO">
		select * from password_table
		where 1=1
		and password = #{password}
	</select>
	
	
	<select id="user_list_one_login" resultType="pictVO">
		select * from user_table
		where 1=1
		and name = #{name} and mobile = #{mobile}
		<if test="type != null and type != '' and type =='judge'">
			and judge = 'Y'
		</if>
		<if test="type != null and type != '' and type =='user'">
			and judge != 'Y'
		</if>
	</select>
	
	<select id="subject_list" resultType="pictVO">
		select t.*, u.assignment_id as user_assignment_id,
		exists(select j.idx from judge_table j where j.user_idx = #{user_idx} and j.team_id = t.idx) as is_judge
		from team_table t
		left outer join user_table u ON u.assignment_id LIKE CONCAT('%', t.assignment_id, '%')
		where u.idx = #{user_idx}
		order by order_by asc
	</select>
	
	<select id="team_judge_list" resultType="pictVO">
		select t.idx, t.assignment_id,  t.assignment_name, t.local, t.title
		, ifnull((select point_1 from judge_table j where user_idx = #{user_idx} and j.team_id = t.idx), 0) as point_1
		, ifnull((select point_2 from judge_table j where user_idx = #{user_idx} and j.team_id = t.idx), 0) as point_2
		, ifnull((select point_3 from judge_table j where user_idx = #{user_idx} and j.team_id = t.idx), 0) as point_3
		, ifnull((select point_4 from judge_table j where user_idx = #{user_idx} and j.team_id = t.idx), 0) as point_4
		, ifnull((select point_1 from judge_table j where user_idx = #{user_idx} and j.team_id = t.idx), 0) as point_4
		, ifnull(cast((select ifnull(point_1, 0) + ifnull(point_2, 0) + ifnull(point_3, 0) + ifnull(point_4, 0) from judge_table j where user_idx = #{user_idx} and j.team_id = t.idx) as  unsigned) , 0) as point_sum
		from team_table t 
		where 1=1 
		<if test="assignment_id != null and assignment_id != ''">
			and t.assignment_id = #{assignment_id}
		</if>
		order by order_by asc
	</select>
	
	<select id="get_judge_info" resultType="pictVO">
		select j.*, t.assignment_name
		from judge_table j
		left outer join team_table t on j.team_id = t.idx
		where team_id = #{team_id} and user_idx = #{user_idx}
	</select>
	
	
	<insert id="get_judge_insert" parameterType="pictVO">
		INSERT INTO judge_table
			(
			 team_id, user_idx, point_1, point_2, point_3, point_4, reg_date
			)
		VALUES (
			 #{team_id}, #{user_idx}, #{point_1}, #{point_2}, #{point_3}, #{point_4}, now() 
			  ) 
	</insert>
	
	<update id="get_judge_update" parameterType="pictVO">
		update judge_table
		set point_1 = #{point_1}
		,point_2 = #{point_2}
		,point_3 = #{point_3}
		,point_4 = #{point_4}
		,reg_date = now()
		where team_id =#{team_id} and user_idx = #{user_idx}
	</update>
	
	
	<insert id="get_over" parameterType="pictVO">
		INSERT INTO judge_over
			(
			 user_id, file_url, reg_date
			)
		VALUES (
			 #{user_idx}, #{file_url}, now() 
			  ) 
	</insert>
	
	<select id="is_over" resultType="int">
		select count(*) from judge_over where user_id = #{user_idx}
	</select>
	
	<select id="file_list_one" resultType="pictVO">
		select * from drive_table
		where user_id = #{user_id} and team_id = #{team_id} and idx = #{idx}
	</select>
	
	
	<insert id="drive_insert" parameterType="pictVO">
		INSERT INTO drive_table
			(
			 user_id, team_id, title, type, img_url, file_url, reg_date
			)
		VALUES (
			 #{user_id}, #{team_id},  #{title}, #{type}, #{img_url}, #{file_url}, now() 
			  ) 
	</insert>
	
	<update id="drive_update" parameterType="pictVO">
		update drive_table
		set title = #{title}
		,type = #{type}
		<if test="img_url != null and img_url != ''">
			, img_url = #{img_url}
		</if>
		<if test="file_url != null and file_url != ''">
			, file_url = #{file_url}
		</if>
		,reg_date = now()
		where team_id =#{team_id} and user_id = #{user_id}
	</update>
	
	<select id="team_info" resultType="pictVO">
		select t.*
        from team_table t
        left outer join user_table u on t.idx = u.team_id
        where u.idx = #{user_id}
	</select>
	
</mapper>